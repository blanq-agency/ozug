version: '3.8'

services:
  nginx:
    build:
      context: ../../provisioning
      dockerfile: nginx.dockerfile
    ports:
      - 8001:80
    volumes:
      - ./:/var/www/html
      - ./storage/app/public:/var/www/html/public/storage
    depends_on:
      - mysql
      - php

  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${FORWARD_DB_PORT:-33061}:3306'
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'mysql-data:/var/lib/mysql'

  php:
    build:
      context: ../../provisioning
      dockerfile: php.dockerfile
    volumes:
      - ./:/var/www/html

  composer:
    build:
      context: ../../provisioning
      dockerfile: composer.dockerfile
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html

  npm:
    image: node:current-alpine
    volumes:
      - ./:/var/www/html
    entrypoint: ["npm"]
    working_dir: /var/www/html

  artisan:
    build:
      context: ../../provisioning
      dockerfile: php.dockerfile
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - mysql
    entrypoint: ["php", "/var/www/html/artisan"]

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1026}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8026}:8025'

volumes:
  mysql-data:
    driver: local